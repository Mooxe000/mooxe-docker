version: '3'

includes:
  helper: ~/.taskfilehub/hubs/helper.yml

vars:
  # https://github.com/Schniz/fnm/releases
  version_fnm: 1.31.1
  version_node: 18.12.1
  # https://github.com/oven-sh/bun/releases
  version_bun: 0.2.2
  FNM_NODE_DIST_MIRROR: https://mirrors.tuna.tsinghua.edu.cn/nodejs-release/
  reistry_mirror: https://registry.npm.taobao.org

tasks:

  default:
    cmds:
      - echo 'Hello World from Task!'
    silent: true

  install-fnm:
    vars:
      bin_name: fnm
      repo_name: Schniz/{{.bin_name}}
      bin_version: '{{.version_fnm}}'
      bin_os: linux
      dl_file: '{{.bin_name}}-{{.bin_os}}.zip'
      url_prefix: '/releases/download'
      url_postfix: '{{.url_prefix}}/v{{.bin_version}}/{{.dl_file}}'
    # https://github.com/Schniz/fnm/releases/download/v1.31.1/fnm-linux.zip
    cmds:
      - task: helper:fn-download
        vars:
          git_repo: '{{.repo_name}}'
          url_postfix: '{{.url_postfix}}'

      - unzip {{.dl_file}}
      - chmod +x {{.bin_name}}
      - mv {{.bin_name}} /usr/local/bin
      - rm -rf {{.dl_file}}

  fnm-env:
    cmds:
      - task: helper:fn-env-kv
        vars:
          env_key: FNM_NODE_DIST_MIRROR
          env_value: '{{.FNM_NODE_DIST_MIRROR}}'

  install-node:
    deps:
      - install-fnm
      - fnm-env
    env:
      FNM_NODE_DIST_MIRROR: '{{.FNM_NODE_DIST_MIRROR}}'
    vars:
      node_path: $HOME/.local/share/fnm/aliases/default/bin/node
    cmds:
      - fnm install {{.version_node}}

      # - fnm env --shell bash >> $HOME/.bashrc
      # - fnm env --shell zsh >> $HOME/.zshrc
      # - fnm env --shell fish >> $HOME/.config/fish/config.fish

      - echo 'eval "$(fnm env --shell bash --use-on-cd)"'
          >> $HOME/.bashrc
      - echo 'eval "$(fnm env --shell zsh --use-on-cd)"'
          >> $HOME/.zshrc
      - echo 'fnm env --shell fish --use-on-cd | source'
          >> $HOME/.config/fish/config.fish

      - task: helper:fn-patchelf-ld
        vars:
          patch_target: '{{.node_path}}'

      - task: helper:fn-patchelf-rpath
        vars:
          patch_lib: libstdc++.so.6
          grep_option: gcc-11.3.0-lib | sed -n '1p'
          patch_target: '{{.node_path}}'

  install-bun:
    vars:
      bin_name: bun
      repo_name: oven-sh/{{.bin_name}}
      bin_version: '{{.version_bun}}'
      bin_os: linux-x64
      dl_file_dir: '{{.bin_name}}-{{.bin_os}}'
      dl_file: '{{.dl_file_dir}}.zip'
      url_prefix: '/releases/download'
      url_postfix: '{{.url_prefix}}/{{.bin_name}}-v{{.bin_version}}/{{.dl_file}}'
      # https://github.com/oven-sh/bun/releases/download/bun-v0.2.2/bun-linux-x64.zip
    cmds:
      - task: helper:fn-download
        vars:
          git_repo: '{{.repo_name}}'
          url_postfix: '{{.url_postfix}}'

      - unzip {{.dl_file}}
      - chmod +x {{.dl_file_dir}}/{{.bin_name}}

      - task: helper:fn-patchelf-ld
        vars:
          patch_target: '{{.dl_file_dir}}/{{.bin_name}}'

      - mv {{.dl_file_dir}}/{{.bin_name}} /usr/local/bin

      - rm -rf {{.dl_file_dir}}
      - rm -rf {{.dl_file}}


  update-npm:
    cmds:
      - eval $(fnm env --shell bash)
        ; npm i -g
            --no-fund
            --registry={{.registry_mirror}}
            npm

  install-use-nnrm:
    cmds:
      - eval $(fnm env --shell bash)
        ; npm i -g
            --registry={{.registry_mirror}}
            nnrm
        ; nnrm use taobao

  install-yarn:
    cmds:

      # node-inspector
      # npm-check

      # lerna autod
      # json-server

      - eval $(fnm env --shell bash)
        ; npm i -g yarn
        ; yarn global add pnpm
            taze node-gyp
            serve http-server
            supervisor nodemon forever pm2

  install-all:
    cmds:
      - task: install-node
      - task: install-bun
      - task: update-npm
      - task: install-use-nnrm
      - task: install-yarn
