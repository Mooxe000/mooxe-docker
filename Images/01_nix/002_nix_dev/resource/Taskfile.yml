version: '3'

includes:
  apps: ~/.taskfilehub/hubs/apps.yml
  helper: ~/.taskfilehub/hubs/helper.yml
  patchelf: ~/.taskfilehub/hubs/patchelf.yml

tasks:

  default:
    cmds:
      - echo 'Hello World from Task!'
    silent: true

  install-shell:
    cmds:
      - nix-env -i
          bash
          fish ncurses
          zsh
          nushell

      - touch $HOME/.profile
      - install -d $HOME/.config/fish

      - task: helper:fn-echo-in-file
        vars:
          raws: set fish_greeting ""
          profile_path: $HOME/.config/fish/config.fish

      - cp -r ./nushell $HOME/.config

  install-starship:
    cmds:
      - nix-env -i starship

      - task: helper:fn-echo-in-bash
        vars:
          raws: eval "$(starship init bash)"
      - task: helper:fn-echo-in-zsh
        vars:
          raws: eval "$(starship init zsh)"
      - task: helper:fn-echo-in-fish
        vars:
          raws: starship init fish | source

      - install -d $HOME/.cache/starship

      - task: helper:fn-echo-in-file
        vars:
          raws: |-
            mkdir -p ~/.cache/starship
            starship init nu | save ~/.cache/starship/init.nu
          profile_path: $HOME/.config/nushell/env.nu

      - task: helper:fn-echo-in-file
        vars:
          raws: source ~/.cache/starship/init.nu
          profile_path: $HOME/.config/nushell/config.nu

  profile-path:
    vars:
      # fn_fish: |-
      #   function fish {
      #     exec -l fish -l "$@"
      #   }
      source_profile:
        source $HOME/.profile
    cmds:
      - task: helper:fn-echo-in-bash
        vars:
          raws: '{{.source_profile}}'
      - task: helper:fn-echo-in-zsh
        vars:
          raws: '{{.source_profile}}'
      - task: helper:fn-echo-in-fish
        vars:
          raws: '{{.source_profile}}'

      - mkdir -p $HOME/.local/bin
      - task: helper:fn-env-kv
        vars:
          env_key: PATH
          env_value: $PATH:$HOME/.local/bin

      # - task: helper:fn-echo-in-bash
      #   vars:
      #     raws: '{{.fn_fish}}'
      # - task: helper:fn-echo-in-zsh
      #   vars:
      #     raws: '{{.fn_fish}}'
      # - task: helper:fn-echo-in-fish
      #   vars:
      #     raws:
      #       sh:
      #         echo '{{.fn_fish}}'
      #         | sed
      #             -e "s/ {$//g"
      #             -e "s/^}$/end/g"
      #             -e "s/\"\$@\"/\$argv\[1\.\.\]/g"

  install-editor:
    cmds:
      - nix-env -i neovim helix
      # helix
      - task: helper:fn-echo-in-profile
        vars:
          raws: |-
            alias vi=nvim
            alias vim=nvim
            alias hi=hx

  install-dltool:
    cmds:
      # aria2
      - nix-env -i axel

  install-sws:
    deps:
      - apps:install-sws
    cmds:
      # - patchelf --print-interpreter /usr/local/bin/static-web-server
      # - patchelf --print-needed /usr/local/bin/static-web-server
      # - patchelf --print-rpath /usr/local/bin/static-web-server
      # - ldd /usr/local/bin/static-web-server
      - task: patchelf:auto-patch
        vars:
          bin_path: /usr/local/bin/static-web-server

  cli-version:
    cmds:
      - vi --version | sed -n '1p'
      - axel --version | sed -n '1p'
      - sws --version

  install-all:
    cmds:
      - task: install-shell
      - task: install-starship

      - task: profile-path

      - task: install-editor
      - task: install-dltool

      - task: install-sws

      - task: cli-version
