version: '3'

includes:
  helper: ~/.taskfilehub/hubs/helper.yml
  patchelf: ~/.taskfilehub/hubs/patchelf.yml

tasks:

  default:
    cmds:
      - echo 'Hello World from Task!'
    silent: true

  install-coursier:
    vars:
      bin_rename: cs
      repo_name: coursier/coursier
      bin_version: 2.1.0-RC2
      bin_os: x86_64-pc-linux
      bin_name: '{{.bin_rename}}-{{.bin_os}}'
      dl_file: '{{.bin_name}}.gz'
      url_prefix: '/releases/download'
      url_postfix: '{{.url_prefix}}/v{{.bin_version}}/{{.dl_file}}'
    cmds:
      - task: helper:fn-download
        vars:
          git_repo: '{{.repo_name}}'
          url_postfix: '{{.url_postfix}}'

      - gzip -d {{.dl_file}}
      - mv {{.bin_name}} {{.bin_rename}}
      - chmod +x {{.bin_rename}}
      - mv {{.bin_rename}} /usr/local/bin

  patch-coursier:
    cmds:
      - task: patchelf:auto-patch
        vars:
          rpath_env: |
            libz_path:
              find_path: /nix/store
              find_name: libz.so.1
              grep_option: zlib-1.2.13
          bin_path: /usr/local/bin/cs

  fn-cache-download:
    vars:
      cache_dir_root: $HOME/.cache/coursier/v1
      gihub_cache_dir: '{{.cache_dir_root}}/https/github.com'
      cache_dir: '{{.cache_dir_root}}/https/github.com/{{.repo_name}}{{.url_prefix}}/{{.bin_version}}'
    cmds:
      - mkdir -p {{.cache_dir}}
      - task: helper:fn-download
        vars:
          git_repo: '{{.repo_name}}'
          url_postfix: '{{.url_postfix}}'
      - mv {{.dl_file}} {{.cache_dir}}
      - if [[ '{{.cache_dir_fix}}' != '' ]]
        ; then
          cd {{.cache_dir}}/..
          ; mv {{.bin_version}} {{.cache_dir_fix}}
        ; fi

  cache-download-coursier:
    vars:
      bin_name: cs
      repo_name: coursier/coursier
      bin_version: v2.1.0-RC2
      bin_os: x86_64-pc-linux
      dl_file: '{{.bin_name}}-{{.bin_os}}.gz'
      url_prefix: '/releases/download'
    cmds:
      # - mkdir -p $HOME/.cache/coursier/v1/https/github.com/coursier/coursier/releases/download/v2.1.0-RC2/
      # - https://github.com/coursier/coursier/releases/download/v2.1.0-RC2/cs-x86_64-pc-linux.gz
      - task: fn-cache-download
        vars:
          repo_name: '{{.repo_name}}'
          bin_version: '{{.bin_version}}'
          dl_file: '{{.dl_file}}'
          url_prefix: '{{.url_prefix}}'
          url_postfix: '{{.url_prefix}}/{{.bin_version}}/{{.dl_file}}'


  cache-download-scalacli:
    vars:
      bin_name: scala-cli
      repo_name: VirtusLab/{{.bin_name}}
      bin_version: v0.1.18
      bin_os: x86_64-pc-linux
      dl_file: '{{.bin_name}}-{{.bin_os}}.gz'
      url_prefix: '/releases/download'
    cmds:
      # - mkdir -p $HOME/.cache/coursier/v1/https/github.com/VirtusLab/scala-cli/releases/download/v0.1.18
      # - https://github.com/VirtusLab/scala-cli/releases/download/v0.1.18/scala-cli-x86_64-pc-linux.gz
      - task: fn-cache-download
        vars:
          repo_name: '{{.repo_name}}'
          bin_version: '{{.bin_version}}'
          dl_file: '{{.dl_file}}'
          url_prefix: '{{.url_prefix}}'
          url_postfix: '{{.url_prefix}}/{{.bin_version}}/{{.dl_file}}'

  cache-download-jdk:
    vars:
      repo_name: adoptium/temurin19-binaries
      bin_version_tag: 19.0.1
      bin_version: jdk-{{.bin_version_tag}}%2B10
      bin_os: x64_linux
      dl_file: OpenJDK19U-jdk_{{.bin_os}}_hotspot_{{.bin_version_tag}}_10.tar.gz
      url_prefix: '/releases/download'
    cmds:
      # - mkdir -p $HOME/.cache/coursier/v1/https/github.com/adoptium/temurin19-binaries/releases/download/jdk-19.0.1%252B10
      # - https://github.com/adoptium/temurin19-binaries/releases/download/jdk-19.0.1%2B10/OpenJDK19U-jdk_x64_linux_hotspot_19.0.1_10.tar.gz
      - task: fn-cache-download
        vars:
          repo_name: '{{.repo_name}}'
          bin_version: '{{.bin_version}}'
          dl_file: '{{.dl_file}}'
          url_prefix: '{{.url_prefix}}'
          url_postfix: '{{.url_prefix}}/{{.bin_version}}/{{.dl_file}}'
          cache_dir_fix:
            sh: echo {{.bin_version}} | sed 's/%/%25/'

  cache-download-sbt:
    vars:
      bin_name: sbt
      repo_name: '{{.bin_name}}/{{.bin_name}}'
      bin_version: 1.8.0
      dl_file: '{{.bin_name}}-{{.bin_version}}.zip'
      url_prefix: '/releases/download'
    cmds:
      # - mkdir -p $HOME/.cache/coursier/v1/https/github.com/sbt/sbt/releases/download/v1.8.0
      # - https://github.com/sbt/sbt/releases/download/v1.8.0/sbt-1.8.0.zip
      - task: fn-cache-download
        vars:
          repo_name: '{{.repo_name}}'
          bin_version: '{{.bin_version}}'
          dl_file: '{{.dl_file}}'
          url_prefix: '{{.url_prefix}}'
          url_postfix: '{{.url_prefix}}/v{{.bin_version}}/{{.dl_file}}'

  setup-coursier:
    deps:
      - cache-download-coursier
      - cache-download-scalacli
      - cache-download-jdk
      - cache-download-sbt
    cmds:
      - axel https://raw.fastgit.org/coursier/jvm-index/master/index.json
      - cs setup
          --yes
          --jvm 19
          --jvm-index ./index.json
      - rm ./index.json

  coursier-env:
    cmds:
      - echo $(grep JAVA_HOME ~/.profile | sed -e 's/export/set -gx/' -e 's/=/ /')
        >> $HOME/.config/fish/config.fish
      - echo 'set -gx PATH $PATH:$JAVA_HOME/bin'
        >> $HOME/.config/fish/config.fish
      - echo 'eval $(cs install --env)'
        >> $HOME/.config/fish/config.fish

  patchelf-java:
    vars:
      cache_dir_root: $HOME/.cache/coursier/arc
      gihub_cache_dir: '{{.cache_dir_root}}/https/github.com'
      repo_name: adoptium/temurin19-binaries
      url_prefix: /releases/download
      bin_version_tag: 19.0.1
      bin_os: x64_linux
      dl_file: OpenJDK19U-jdk_{{.bin_os}}_hotspot_{{.bin_version_tag}}_10.tar.gz
      bin_version: jdk-{{.bin_version_tag}}%252B10/{{.dl_file}}/jdk-{{.bin_version_tag}}+10
      cache_dir: '{{.cache_dir_root}}/https/github.com/{{.repo_name}}{{.url_prefix}}/{{.bin_version}}'
      JAVA_HOME: '{{.cache_dir}}'
    cmds:
      - task: patchelf:auto-patch
        vars:
          rpath_env: |
            libz_path:
              find_path: /nix/store
              find_name: libz.so.1
              grep_option: zlib-1.2.13
            libjli_path:
              find_path: {{.JAVA_HOME}}
              find_name: libjli.so
              grep_option: '-v grep'
          # bin_path:
          bin_dir: '{{.JAVA_HOME}}/bin'

  patchelf-coursier:
    cmds:
      - task: patchelf:auto-patch
        vars:
          rpath_env: |
            libz_path:
              find_path: /nix/store
              find_name: libz.so.1
              grep_option: zlib-1.2.13
          bin_dir: $HOME/.local/share/coursier/bin

  cli-version:
    cmds:
      - bash -lc "
          java --version
        ; cs version
        ; sbt --version
        ; scala --version
        ; rm -rf ./target
        "

  install-all:
    cmds:
      - task: install-coursier
      - task: patch-coursier
      - task: setup-coursier
      - task: coursier-env

      - task: patchelf-java
      - task: patchelf-coursier

      - task: cli-version
