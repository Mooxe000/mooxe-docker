version: '3'

includes:
  helper: ~/.taskfilehub/hubs/helper.yml
  patchelf: ~/.taskfilehub/hubs/patchelf.yml
  sdkman: ~/.taskfilehub/hubs/sdkman.yml

vars:
  # https://github.com/sdkman/sdkman-cli
  version_sdkman: 5.16.0

  java_version: 19
  vm_version: 22.3
  vm_version_0: '{{.vm_version}}.0'

env:
  SDK_JAVA_VERSION: '{{.vm_version}}.r{{.java_version}}-grl'

  # SDK_LEININGEN_VERSION: 2.9.10-2
  # SDK_SPRINGBOOT_VERSION: 2.7.5
  # SDK_QUARKUS_VERSION: 2.14.0.Final

tasks:

  default:
    cmds:
      - echo 'Hello World from Task!'
    silent: true

  sdkman-env:
    vars:
      no_fish: source $HOME/.sdkman/bin/sdkman-init.sh
      fn_fish:  |-
        function sdk
          bash -c "source $HOME/.sdkman/bin/sdkman-init.sh ; sdk $argv[1..]"
        end
    cmds:
      - task: helper:fn-echo-in-bash
        vars:
          raws: '{{.no_fish}}'
      - task: helper:fn-echo-in-zsh
        vars:
          raws: '{{.no_fish}}'
      - task: helper:fn-echo-in-fish
        vars:
          raws: '{{.fn_fish}}'

  install-post-sdkman:
    vars:
      git_host: download.fastgit.org
    # - nix-shell -p zip --run 'fish'
    # - -U 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_0) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.56 Safari/535.11'
    # | sed -e '/# download binary/ {n; d}'
    cmds:
      - nix-env -i zip-3.0
      - cat $HOME/.sdkman/src/sdkman-install.sh
          | sed -e "\$!N;/\n.*X-Sdkman'/!P;D"
          | sed
              -e "/X-Sdkman'/i\
                \n
                \       echo \${download_url}\n
                \       curl -I \${download_url} > \${tmp_headers_file}\n
                \       local download_url=\$(
                          cat \${tmp_headers_file}
                          | grep '^location'
                          | awk '{print \$2}'
                          | sed
                              -e 's/[[:space:]]*$//'
                              -e 's/github.com/{{.git_host}}/g'
                        )
                \n
              "
              -e "/X-Sdkman'/a\
                \n
                \       axel
                          -o \${binary_input}
                          -n 5 \${download_url}
                \n
              "
          > $HOME/.sdkman/src/sdkman-install.tmp.sh
      - mv $HOME/.sdkman/src/sdkman-install.tmp.sh
          $HOME/.sdkman/src/sdkman-install.sh
      # -   > $HOME/.sdkman/src/sdkman-install.new.sh
      # - cp $HOME/.sdkman/src/sdkman-install.sh
      #     $HOME/.sdkman/src/sdkman-install.old.sh
      # - cp $HOME/.sdkman/src/sdkman-install.new.sh
      #     $HOME/.sdkman/src/sdkman-install.sh
      # - rm $HOME/.sdkman/src/sdkman-install.old.sh
      # - rm $HOME/.sdkman/src/sdkman-install.new.sh

  install-sdkman:
    deps:
      - sdkman-env
    # https://github.com/sdkman/sdkman-cli/releases/download/5.16.0/sdkman-cli-5.16.0.zip
    vars:
      # java_version: '{{.java_version}}'
      # vm_version: '{{.vm_version}}'
      bin_name: sdkman
      repo_name: '{{.bin_name}}/{{.bin_name}}-cli'
      bin_version: '{{.version_sdkman}}'
      dl_file: '{{.bin_name}}-cli-{{.bin_version}}.zip'
      unzip_dir: '{{.bin_name}}-{{.bin_version}}'
      url_prefix: '/releases/download'
      url_postfix: '{{.url_prefix}}/{{.bin_version}}/{{.dl_file}}'
    cmds:
      - task: helper:fn-download
        vars:
          git_repo: '{{.repo_name}}'
          url_postfix: '{{.url_postfix}}'

      - unzip {{.dl_file}}
      - mv {{.unzip_dir}} $HOME/.sdkman
      - install -d $HOME/.sdkman/ext
      - install -d $HOME/.sdkman/tmp
      - touch candidates
        ; install -D candidates $HOME/.sdkman/var/candidates
        ; rm candidates

      - task: helper:fn-bash-lc
        vars:
          commands: sdk offline; sdk update

      - task: install-post-sdkman

  install-java:
    cmds:

      - task: sdkman:fn-install-sdk
        vars:
          upname: JAVA
          lwname: java

      # ; sdk env init
      - task: helper:fn-bash-lc
        vars:
          commands:
            sdk use java $SDK_JAVA_VERSION

      # - task: install-sdk
      #   vars: {
      #     upname: LEININGEN
      #   , lwname: leiningen
      #   }

      # - task: install-sdk
      #   vars: {
      #     upname: SPRINGBOOT
      #   , lwname: springboot
      #   }

      # - task: install-sdk
      #   vars: {
      #     upname: QUARKUS
      #   , lwname: quarkus
      #   }

  install-native-image:
    vars:

      os_platform: linux-amd64
      dl_file: native-image-installable-svm-java{{.java_version}}-{{.os_platform}}-{{.vm_version_0}}.jar
      repo_name: 'graalvm/graalvm-ce-builds'
      url_prefix: '/releases/download'
      url_postfix: '{{.url_prefix}}/vm-{{.vm_version_0}}/{{.dl_file}}'

    cmds:
      # - gu install native-image
      # grallvm native-image
      # https://github.com/graalvm/graalvm-ce-builds/releases
      # https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/native-image-installable-svm-java19-linux-amd64-22.3.0.jar
      - task: helper:fn-download
        vars:
          git_repo: '{{.repo_name}}'
          url_postfix: '{{.url_postfix}}'

      - task: helper:fn-bash-lc
        vars:
          commands:
            gu -L install {{.dl_file}}
      - rm {{.dl_file}}

  patch-bin:
    cmds:
      - task: patchelf:auto-patch
        vars:
          rpath_env: |
            libz_path:
              find_path: /nix/store
              find_name: libz.so.1
              grep_option: zlib-1.2.13
            libjli_path:
              find_path: $HOME/.sdkman/candidates/java/current/
              find_name: libjli.so
              grep_option: '-v grep'
          # bin_path:
          bin_dir: $HOME/.sdkman/candidates/java/current/bin

  install-java-post:
    cmds:
      - task: patch-bin
      - task: install-native-image

  cli-version:
    cmds:
      - sdk version
      - gu --version
      - java --version

  install-all:
    cmds:
      - task: install-sdkman
      - task: install-java
      - task: install-java-post
